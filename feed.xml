<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>z3ntu</title>
    <description>This is my blog and website, where I write about different things and present my projects.
</description>
    <link>https://z3ntu.github.io/</link>
    <atom:link href="https://z3ntu.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 04 Sep 2018 16:51:57 +0200</pubDate>
    <lastBuildDate>Tue, 04 Sep 2018 16:51:57 +0200</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>iTunes protocol handler on Linux with Wine</title>
        <description>&lt;p&gt;Today I have tried adding my PayPal account to my iTunes (installed with Wine) Account but discovered, that adding my PayPal account as a payment method didn‚Äôt work. After inspecting the network traffic, I found that my browser (Firefox) was redirected to an &lt;code class=&quot;highlighter-rouge&quot;&gt;itmss://&lt;/code&gt; URL, but Firefox didn‚Äôt know how to handle that and did nothing. To get it working yourself, follow the next steps:&lt;/p&gt;

&lt;p&gt;Assuming you already have iTunes installed and are using Firefox, open &lt;code class=&quot;highlighter-rouge&quot;&gt;about:config&lt;/code&gt; in Firefox, accept the prompt, right-click and select New -&amp;gt; Boolean. In the dialog enter &lt;code class=&quot;highlighter-rouge&quot;&gt;network.protocol-handler.expose.itmss&lt;/code&gt; as preference name and select &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; as value. After that, restart Firefox.&lt;/p&gt;

&lt;p&gt;Next, create a new file somewhere (I chose &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin/&lt;/code&gt;), called for example &lt;code class=&quot;highlighter-rouge&quot;&gt;itunes-url&lt;/code&gt; and make it executable (&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod +x filename&lt;/code&gt;). Put the following content into the file while adjusting the paths to the Wine prefix and the installation directory.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;env &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;WINEPREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/luca/.wine_itunes&quot;&lt;/span&gt; wine /home/luca/.wine_itunes/drive_c/Program&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Files/iTunes/iTunes.exe /url &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I found this invocation with Wine regedit.exe under &lt;code class=&quot;highlighter-rouge&quot;&gt;HKEY_CLASSES_ROOT\itmss\shell\open\command&lt;/code&gt;, based on &lt;a href=&quot;https://support.shotgunsoftware.com/hc/en-us/articles/219031308-Launching-applications-using-custom-browser-protocols&quot;&gt;this website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then you can go into iTunes and add your PayPal payment method. Once you‚Äôve logged in and accepted the PayPal prompts, you should get a popup from Firefox where you should select the application to handle the &lt;code class=&quot;highlighter-rouge&quot;&gt;itmss&lt;/code&gt; URL. Select the &lt;code class=&quot;highlighter-rouge&quot;&gt;itunes-url&lt;/code&gt; script, you created before and click ‚ÄúOpen link‚Äù. Now iTunes should get the URL from PayPal and you can confirm the new payment method in iTunes.&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Sep 2018 16:19:00 +0200</pubDate>
        <link>https://z3ntu.github.io/2018/09/04/iTunes-protocol-handler-on-Linux-with-Wine.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2018/09/04/iTunes-protocol-handler-on-Linux-with-Wine.html</guid>
        
        <category>wine</category>
        
        
      </item>
    
      <item>
        <title>Signing boot images for fastboot</title>
        <description>&lt;p&gt;If you have ever seen the error &lt;code class=&quot;highlighter-rouge&quot;&gt;FAILED (remote: bootimage: incomplete or not signed)&lt;/code&gt;, here‚Äôs the solution (at least for the Fairphone 2 üòâ):&lt;/p&gt;

&lt;p&gt;Download the &lt;code class=&quot;highlighter-rouge&quot;&gt;BootSignature.jar&lt;/code&gt; file from my server (or compile it yourself from the LineageOS 14.1 tree with the command &lt;code class=&quot;highlighter-rouge&quot;&gt;mka BootSignature&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -O https://private.z3ntu.xyz/BootSignature.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Download the &lt;code class=&quot;highlighter-rouge&quot;&gt;make_key&lt;/code&gt; tool from the LineageOS GitHub.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -O https://raw.githubusercontent.com/LineageOS/android_development/cm-14.1/tools/make_key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make the script executable&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod +x make_key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Generate the key with&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./make_key keystore '/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Put the &lt;code class=&quot;highlighter-rouge&quot;&gt;BootSignature.jar&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;keystore.pk8&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;keystore.x509.pem&lt;/code&gt; in a directory of your choice.&lt;/p&gt;

&lt;p&gt;Put the following script into a location in the PATH (&lt;code class=&quot;highlighter-rouge&quot;&gt;~/bin&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt; should be good) &lt;strong&gt;and replace the first variable with the location you put the three files in&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;KEYSTORE_TOOLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/location/to/jar_and_certs

&lt;span class=&quot;nv&quot;&gt;IMGFILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;lt;file.img&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$KEYSTORE_TOOLS&lt;/span&gt;/BootSignature.jar /boot &lt;span class=&quot;nv&quot;&gt;$IMGFILE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$KEYSTORE_TOOLS&lt;/span&gt;/keystore.pk8 &lt;span class=&quot;nv&quot;&gt;$KEYSTORE_TOOLS&lt;/span&gt;/keystore.x509.pem &lt;span class=&quot;nv&quot;&gt;$IMGFILE&lt;/span&gt;.signed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Don‚Äôt forget to make that script executable! (&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod +x&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Now you can use the script to sign your images and then boot it&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sign_img boot.img &amp;amp;&amp;amp; fastboot boot boot.img.signed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Have fun!&lt;/p&gt;
</description>
        <pubDate>Fri, 16 Jun 2017 08:55:00 +0200</pubDate>
        <link>https://z3ntu.github.io/2017/06/16/Signing-boot-images.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2017/06/16/Signing-boot-images.html</guid>
        
        <category>android</category>
        
        <category>fp2</category>
        
        
      </item>
    
      <item>
        <title>Install and configure EFIDroid on the Fairphone 2</title>
        <description>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of contents:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#about-efidroid&quot;&gt;About EFIDroid&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-install-fp2&quot;&gt;How to install (FP2)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#add-a-new-rom&quot;&gt;Add a new ROM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#add-a-system-to-the-new-rom&quot;&gt;Add a system to the new ROM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#booting-into-your-new-rom&quot;&gt;Booting into your new ROM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;about-efidroid&quot;&gt;About EFIDroid&lt;/h2&gt;
&lt;p&gt;EFIDroid is a relatively new multiboot solution for mobile devices. It is based on the EFI implementation by Intel (EDK2).&lt;br /&gt;
For more information and support, please visit to the &lt;a href=&quot;https://forum.fairphone.com/t/efidroid-multiboot-for-the-fairphone-2/23344&quot;&gt;Fairphone Forum thread&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;how-to-install-fp2&quot;&gt;How to install (FP2)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Download the EFIDroid Manager app from Google Play: &lt;a href=&quot;https://play.google.com/store/apps/details?id=org.efidroid.efidroidmanager&quot;&gt;https://play.google.com/store/apps/details?id=org.efidroid.efidroidmanager&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Go to &lt;strong&gt;Install/Update&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/sidebar.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Install&lt;/strong&gt;:&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/install.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;It should be successfully installed!&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/installed.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;add-a-new-rom&quot;&gt;Add a new ROM&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Before you do any of this you should download a ROM .zip file (for example &lt;a href=&quot;http://storage.googleapis.com/fairphone-updates/7114445d-6560-440c-9c9f-44639808f7a7/fp2-sibon-16.09.0-ota-userdebug.zip&quot;&gt;FP Open 16.09&lt;/a&gt;) and put it on your SD card (&lt;code class=&quot;highlighter-rouge&quot;&gt;/storage/sdcard1/&lt;/code&gt; and &lt;strong&gt;!!NOT!!&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/sdcard&lt;/code&gt;!).&lt;/li&gt;
  &lt;li&gt;To add a ROM click the &lt;strong&gt;FAB&lt;/strong&gt; (Floating Action Button)&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/mgr_systems_empty.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Choose in the screen &lt;code class=&quot;highlighter-rouge&quot;&gt;/data/media/0/multiboot&lt;/code&gt; as location.&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/mgr_rom_new.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Enter a &lt;strong&gt;name&lt;/strong&gt; for the ROM&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/mgr_rom_configured.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;You can leave the partitions as they are (Schema &lt;code class=&quot;highlighter-rouge&quot;&gt;LoopSystem + BindOther&lt;/code&gt;) and press the &lt;strong&gt;tick&lt;/strong&gt; in the top right corner.&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/mgr_rom_partitions_finished.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Now you can see that your newly created ROM is in the list.&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/mgr_systems_one.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Then &lt;strong&gt;reboot&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/reboot.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;add-a-system-to-the-new-rom&quot;&gt;Add a system to the new ROM&lt;/h2&gt;
&lt;p&gt;Once you are in the &lt;strong&gt;UEFI&lt;/strong&gt;, you can navigate around with &lt;strong&gt;volume down&lt;/strong&gt; to go down, &lt;strong&gt;volume up&lt;/strong&gt; to go up and the &lt;strong&gt;power&lt;/strong&gt; button to confirm your selection.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To flash a ROM the empty slot, select &lt;strong&gt;TWRP (Internal)&lt;/strong&gt; and press &lt;strong&gt;power&lt;/strong&gt;.
&lt;img src=&quot;/images/efidroid/uefi_twrp.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Next select your newly created ROM&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/uefi_twrp_os.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;You will land in &lt;strong&gt;TWRP&lt;/strong&gt; and be greeted with a warning about keeping the system partition &lt;strong&gt;readonly&lt;/strong&gt;. Swipe the slider at the bottom to acknowledge it.&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Install&lt;/strong&gt;, select the &lt;strong&gt;Micro SDcard&lt;/strong&gt; at the top.&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/twrp_2.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Select for example the file &lt;code class=&quot;highlighter-rouge&quot;&gt;fp2-sibon-16.09.0-ota-userdebug.zip&lt;/code&gt;.&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/twrp_3.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Disable the &lt;strong&gt;Zip file signature verification&lt;/strong&gt; and slide the confirmation bar.
&lt;img src=&quot;/images/efidroid/twrp_4.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Everything should be good and you can reboot!&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/twrp_5.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;booting-into-your-new-rom&quot;&gt;Booting into your new ROM&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Select&lt;/strong&gt; your new ROM and press the &lt;strong&gt;power&lt;/strong&gt; button. &lt;em&gt;Do not be put off because of the long ‚ÄúBooting &amp;lt;romname&amp;gt;‚Äù screen as FP Open plays the boot animation very late (unfortunately).&lt;/em&gt;&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/boot_secondary.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Aaaand we are in!&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/images/efidroid/booted.png&quot; alt=&quot;&quot; width=&quot;300&quot; class=&quot;toggle-image&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;If you have questions, please ask in the Fairphone Forum thread linked at the top.&lt;/strong&gt;&lt;/p&gt;

&lt;div style=&quot;position:fixed;right:0;bottom:0; user-select: none;&quot;&gt;
&lt;div style=&quot;background-color:gray; color:white; cursor: pointer; margin-right: 10px; margin-bottom: 10px; padding: 5px; border-radius: 10px&quot; width=&quot;100&quot; height=&quot;100&quot; onclick=&quot;$('.toggle-image').css('display', 'none');&quot;&gt;Disable images&lt;/div&gt;
&lt;div style=&quot;background-color:gray; color:white; cursor: pointer; margin-right: 10px; margin-bottom: 10px; padding: 5px; border-radius: 10px&quot; width=&quot;100&quot; height=&quot;100&quot; onclick=&quot;$('.toggle-image').css('display', 'inline');&quot;&gt;Enable images&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 01 Nov 2016 15:27:00 +0100</pubDate>
        <link>https://z3ntu.github.io/2016/11/01/Install-and-configure-efidroid.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2016/11/01/Install-and-configure-efidroid.html</guid>
        
        <category>efidroid</category>
        
        <category>fp2</category>
        
        
      </item>
    
      <item>
        <title>SDDM login with a Yubikey on Arch Linux</title>
        <description>&lt;p&gt;If you are wondering how you can login with a Yubikey into your system with SDDM, here are the steps:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;
Install &lt;a href=&quot;https://www.archlinux.org/packages/?name=yubico-pam&quot;&gt;yubico-pam&lt;/a&gt; from [community].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Edit the file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/yubikeys&lt;/code&gt; and insert text in the following format:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;username&amp;gt;:&amp;lt;yubikey_token_id&amp;gt;
# eg
luca:cclcclcclccl&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you don‚Äôt know what the token ID from your yubikey is, just open a text editor and press the button on your yubikey to create a one time password (=OTP). Then take the &lt;strong&gt;first twelve characters&lt;/strong&gt; from that string, which is your token id. If you are too lazy to count, you can also press the button multiple times and take the part that stays the same at the beginning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Edit the file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/pam.d/system-auth&lt;/code&gt; that it looks like the following. Note, that by editing this file you allow these users you specified in Step 2 to login nearly everywhere in your system with the yubikey.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#%PAM-1.0

auth sufficient pam_yubico.so debug id=1 authfile=/etc/yubikeys

auth required pam_unix.so try_first_pass nullok
# and more lines&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;If you don‚Äôt want fancy debug lines, remove the ‚Äòdebug‚Äô parameter.
If you don‚Äôt want the ability to just login with your yubikey, replace the ‚Äòsufficient‚Äô parameter with ‚Äòrequired‚Äô. But note, that you will be locked out of your system if you lose your yubikey or don‚Äôt have it with you!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Now you should be able to use your Yubikey to login into your session, unlock the lockscreen and even use it for &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; access.
&lt;em&gt;If you don‚Äôt want global Yubikey authentication, you can also not add the line in step 3 into the &lt;code class=&quot;highlighter-rouge&quot;&gt;system-auth&lt;/code&gt; file but into the &lt;code class=&quot;highlighter-rouge&quot;&gt;sddm&lt;/code&gt; file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/pam.d/&lt;/code&gt; directory. But also note, that you won‚Äôt be able to use your Yubikey to unlock the lockscreen, just to login!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I hope this was helpful. If you have any questions, don‚Äôt hesitate to ask in the comments.
You can also take a look at the &lt;a href=&quot;https://fedoraproject.org/wiki/Using_Yubikeys_with_Fedora&quot;&gt;Fedora wiki article about Yubikey authentication&lt;/a&gt;, which is much better than the Arch wiki at the moment.&lt;/p&gt;
</description>
        <pubDate>Sat, 23 Jul 2016 11:56:00 +0200</pubDate>
        <link>https://z3ntu.github.io/2016/07/23/SDDM-login-with-yubikey.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2016/07/23/SDDM-login-with-yubikey.html</guid>
        
        <category>yubikey</category>
        
        <category>login</category>
        
        <category>tutorial</category>
        
        
      </item>
    
      <item>
        <title>Fixing the Unity3D 5.3 startup error on Linux</title>
        <description>&lt;p&gt;If you experience this error with the newest Unity3D Build on Linux, just do this one simple step:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/unity3d_startup_error.png&quot; alt=&quot;Screenshot&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.local/share/unity3d&lt;/code&gt; and you are good to go!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Now have fun with Unity!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In more detail, the ‚Äúmain‚Äù error message in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/unity3d/Editor.log&lt;/code&gt; is&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CopyPackageFile failed, unable to copy /opt/Unity/Editor/Data/Resources/Packages/unity-editor-home-0.0.7.tgz to /home/luca/.local/share/unity3d/Packages/unity-editor-home-0.0.7.tgz&lt;/p&gt;

  &lt;p&gt;CopyPackageFile failed, unable to copy /opt/Unity/Editor/Data/Resources/Packages/unityeditor-cloud-hub-0.0.1.tgz to /home/luca/.local/share/unity3d/Packages/unityeditor-cloud-hub-0.0.1.tgz&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 18 Dec 2015 19:23:00 +0100</pubDate>
        <link>https://z3ntu.github.io/2015/12/18/fixing-unity-5.3-startup-error-linux.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2015/12/18/fixing-unity-5.3-startup-error-linux.html</guid>
        
        <category>unity3d</category>
        
        <category>tutorial</category>
        
        
      </item>
    
      <item>
        <title>Cross-compiling native Linux applications for Android</title>
        <description>&lt;h1 id=&quot;heres-how-you-can-cross-compile-normal-linux-applications-for-android&quot;&gt;Here‚Äôs how you can cross-compile ‚Äúnormal‚Äù Linux applications for Android!&lt;/h1&gt;

&lt;h3 id=&quot;this-post-will-be-updated-sometimes&quot;&gt;&lt;em&gt;This post will be updated sometimes!&lt;/em&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;For the &lt;code class=&quot;highlighter-rouge&quot;&gt;android_configure&lt;/code&gt; script download &lt;a href=&quot;https://gist.github.com/z3ntu/57b95b02ebe8e153d5a8&quot;&gt;this script&lt;/a&gt;, place it in your &lt;code class=&quot;highlighter-rouge&quot;&gt;~/bin&lt;/code&gt; folder and (if not already) add &lt;code class=&quot;highlighter-rouge&quot;&gt;~/bin&lt;/code&gt; to your &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; variable.&lt;/li&gt;
  &lt;li&gt;To create a standalone toolchain use something like the following command (run from your NDK root-dir):
&lt;script src=&quot;https://gist.github.com/z3ntu/4285eb6fd4327caa6fd8.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ncurses&quot;&gt;Ncurses&lt;/h3&gt;
&lt;p&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;ac_cv_header_locale_h=no&lt;/code&gt; to your &lt;code class=&quot;highlighter-rouge&quot;&gt;android_configure&lt;/code&gt; script to the line &lt;code class=&quot;highlighter-rouge&quot;&gt;export CC&lt;/code&gt; (example: &lt;code class=&quot;highlighter-rouge&quot;&gt;export CC=${CROSS_PATH}/${CROSS_COMPILE}-gcc ac_cv_header_locale_h=no&lt;/code&gt;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure &lt;span class=&quot;nt&quot;&gt;--enable-widec&lt;/span&gt;
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;htop&quot;&gt;Htop&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;gnutls&quot;&gt;GnuTLS&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure &lt;span class=&quot;nt&quot;&gt;--without-p11-kit&lt;/span&gt;
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;wget&quot;&gt;Wget&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure
patch src/gnutls.c &amp;lt; ../TOOLS/gnutls.c.patch
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;curl&quot;&gt;Curl&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;libiconv&quot;&gt;Libiconv&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;git&quot;&gt;Git&lt;/h3&gt;
&lt;p&gt;Comment out the parts in &lt;code class=&quot;highlighter-rouge&quot;&gt;configure.ac&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;ac_cv_fread_reads_directories&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ac_cv_snprintf_returns_bogus&lt;/code&gt;. Currently on Line 854.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;make configure
android_configure
make &lt;span class=&quot;nv&quot;&gt;NO_NSEC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;binutils&quot;&gt;Binutils&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;python-not-complete&quot;&gt;Python (not complete)&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux &lt;span class=&quot;nt&quot;&gt;--build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm
not &lt;span class=&quot;nb&quot;&gt;complete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;gcc&quot;&gt;GCC&lt;/h2&gt;

&lt;h3 id=&quot;gmp&quot;&gt;GMP&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;mpfr&quot;&gt;MPFR&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;mpc&quot;&gt;MPC&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;gcc-1&quot;&gt;GCC&lt;/h3&gt;
&lt;p&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;-I&amp;lt;YOUR_NDK_ROOT&amp;gt;/sources/android/support/include&lt;/code&gt; to your CFLAGS (android_configure script)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;android_configure
make
make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Dec 2015 20:23:00 +0100</pubDate>
        <link>https://z3ntu.github.io/2015/12/12/Cross-compiling-native-linux-applications-for-android.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2015/12/12/Cross-compiling-native-linux-applications-for-android.html</guid>
        
        <category>android</category>
        
        <category>tutorial</category>
        
        
      </item>
    
      <item>
        <title>Google Play Services with Android 6.0 Marshmallow and Genymotion</title>
        <description>&lt;p&gt;So, I think you want to install the Google Play Store &amp;amp; Services with an Android 6.0 Marshmallow Emulator?&lt;/p&gt;

&lt;p&gt;To do that, follow either the long or the short version.&lt;/p&gt;

&lt;p&gt;You need the following three files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.mirrorcreator.com/files/0ZIO8PME/Genymotion-ARM-Translation_v1.1.zip_links&quot;&gt;Genymotion-ARM-Translation_v1.1.zip&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.androidfilehost.com/?fid=96042739161891406&quot;&gt;gapps-L-4-21-15.zip&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.androidfilehost.com/?fid=24052804347835438&quot;&gt;benzo-gapps-M-20151011-signed-chroma-r3.zip&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Short version:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download all three files.&lt;/li&gt;
  &lt;li&gt;Create an emulator with the &lt;code class=&quot;highlighter-rouge&quot;&gt;Nexus 5X&lt;/code&gt; image and start it.&lt;/li&gt;
  &lt;li&gt;Flash &lt;code class=&quot;highlighter-rouge&quot;&gt;Genymotion-ARM-Translation_v1.1.zip&lt;/code&gt; and reboot.&lt;/li&gt;
  &lt;li&gt;Flash &lt;code class=&quot;highlighter-rouge&quot;&gt;gapps-L-4-21-15.zip&lt;/code&gt; and reboot.&lt;/li&gt;
  &lt;li&gt;Sign into your Google Account.&lt;/li&gt;
  &lt;li&gt;Flash &lt;code class=&quot;highlighter-rouge&quot;&gt;benzo-gapps-M-20151011-signed-chroma-r3.zip&lt;/code&gt; and reboot.&lt;/li&gt;
  &lt;li&gt;You are finished!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Long version:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then start GenyMotion and add an emulator with the preset &lt;code class=&quot;highlighter-rouge&quot;&gt;!! PREVIEW - Google Nexus 5X - 6.0.0 - API 23 - 1080x1920&lt;/code&gt;. Start it and wait until you see the homescreen.&lt;/p&gt;

&lt;p&gt;The next step is to flash the &lt;code class=&quot;highlighter-rouge&quot;&gt;Genymotion-ARM-Translation_v1.1.zip&lt;/code&gt;. To do that, just drap &amp;amp; drop the .zip file onto the emulator.&lt;/p&gt;

&lt;p&gt;Turn the emulator off with the power button and wait until it is powered off. Then turn it on again.&lt;/p&gt;

&lt;p&gt;Now repeat the last two steps with &lt;code class=&quot;highlighter-rouge&quot;&gt;gapps-L-4-21-15.zip&lt;/code&gt; (flash, reboot).&lt;/p&gt;

&lt;p&gt;If you are finished with that, sign into your Google account (you can do that when opening the Play Store). If you are successfully logged in, flash the &lt;code class=&quot;highlighter-rouge&quot;&gt;benzo-gapps-M-20151011-signed-chroma-r3.zip&lt;/code&gt; file and reboot again.&lt;/p&gt;

&lt;p&gt;Have fun with your working Google Play Store!&lt;/p&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://gist.github.com/wbroek/9321145&quot;&gt;gist.github.com&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Dec 2015 12:24:00 +0100</pubDate>
        <link>https://z3ntu.github.io/2015/12/10/play-services-with-genymotion.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2015/12/10/play-services-with-genymotion.html</guid>
        
        <category>android</category>
        
        <category>tutorial</category>
        
        
      </item>
    
      <item>
        <title>SSH on Android</title>
        <description>&lt;h1 id=&quot;installing-the-ssh-binary-on-android-for-use-with-adb-shell&quot;&gt;Installing the SSH binary on Android (for use with &lt;code class=&quot;highlighter-rouge&quot;&gt;adb shell&lt;/code&gt;)&lt;/h1&gt;

&lt;p&gt;Install &lt;a href=&quot;https://play.google.com/store/apps/details?id=berserker.android.apps.sshdroid&quot;&gt;SSHDroid&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Launch SSHDroid and accept the superuser request&lt;/p&gt;

&lt;p&gt;Then make sure you have your Android device connected with access to adb!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;adb shell
su
mount &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; rw,remount /system
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /data/data/berserker.android.apps.sshdroid/dropbear/ssh /system/bin/ssh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Tue, 03 Nov 2015 00:00:00 +0100</pubDate>
        <link>https://z3ntu.github.io/2015/11/03/SSH-on-Android.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2015/11/03/SSH-on-Android.html</guid>
        
        <category>android</category>
        
        <category>ssh</category>
        
        <category>tutorial</category>
        
        
      </item>
    
      <item>
        <title>Deploying Unity WebGL with Apache</title>
        <description>&lt;script type=&quot;text/javascript&quot; src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/jquery.fancybox.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery.fancybox.pack.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;
        $(document).ready(function() {
            $('.fancybox').fancybox();
        });
    &lt;/script&gt;

&lt;h1 id=&quot;deploying-unity-webgl-on-apache&quot;&gt;Deploying Unity WebGL on Apache&lt;/h1&gt;

&lt;p&gt;Have you had troubles getting your exported Unity WebGL project to work?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GET /Release/UnityConfig.js &lt;strong&gt;404 (Not Found)&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;GET /Release/fileloader.js &lt;strong&gt;404 (Not Found)&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;GET /Release/1446299115.js &lt;strong&gt;404 (Not Found)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I got the instructions here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Export your Unity project as WebGL (probably already did this).
&lt;a href=&quot;/images/unity_webgl_export.png&quot; class=&quot;fancybox&quot; title=&quot;Export settings&quot;&gt;Click for a screenshot of my Build Settings&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Move every file from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Release&lt;/code&gt; folder into the &lt;code class=&quot;highlighter-rouge&quot;&gt;Compressed&lt;/code&gt; folder. You can now delete the &lt;code class=&quot;highlighter-rouge&quot;&gt;Release&lt;/code&gt; folder.
Your folder structure should look like this:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;.htaccess
index.html
Compressed
- many files (.datagz, .jsgz, .memgz)
TemplateData
- many image files, 1 .css &amp;amp; 1 .js file&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Enter &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo a2enmod rewrite&lt;/code&gt; in the terminal (to activate the &lt;code class=&quot;highlighter-rouge&quot;&gt;rewrite&lt;/code&gt; Apache module).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apache2/apache2.conf&lt;/code&gt; with your favorite text editor and find the following part:
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Directory /var/www/&amp;gt;&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Directory /var/www/html/&amp;gt;&lt;/code&gt; (or wherever your ‚Äúmain‚Äù folder is)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change &lt;code class=&quot;highlighter-rouge&quot;&gt;AllowOverride&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;All&lt;/code&gt; and save the file.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope this helped you!&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Oct 2015 12:25:57 +0100</pubDate>
        <link>https://z3ntu.github.io/2015/10/31/Deploying-Unity-WebGL-with-Apache.html</link>
        <guid isPermaLink="true">https://z3ntu.github.io/2015/10/31/Deploying-Unity-WebGL-with-Apache.html</guid>
        
        <category>unity3d</category>
        
        <category>tutorial</category>
        
        
      </item>
    
  </channel>
</rss>
